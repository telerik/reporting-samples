@page "/"
@inject IJSRuntime JS
@inject HttpClient Http
@using System.Net.Http;
@using System.Net.Http.Json;
@using Microsoft.JSInterop;
@using System.Threading.Tasks;

<p>Generate PDF, save and print</p>
<ul>
    <li>ASP.Net Core Blazor WASM</li>
    <li>DotNet 9</li>
    <li>Telerik Reporting 18.3.24.1218</li>
</ul>

<p><button @onclick="PrintReportJavascript">Print report using only Javascript</button></p>
<p><button @onclick="PrintReportBlazor">Print report using Blazor and Javascript</button></p>

@code {

    // Javascript interop to print the report
    // Ensure JavaScript call is awaited
    private async Task PrintReportJavascript()
    {
        await JS.InvokeVoidAsync("printReport", "Barcodes Report.trdp", "token");
    }

    // Blazor interop to print the report
    private async Task PrintReportBlazor()
    {
        string reportName = "Barcodes Report.trdp"; 
        string authToken = "token"; 

        try
        {
            var response = await Http.GetAsync($"/report?reportName={reportName}&authToken={authToken}");
            if (response.IsSuccessStatusCode)
            {
                var pdfBytes = await response.Content.ReadAsByteArrayAsync();
                await JS.InvokeVoidAsync("printPdfFromBytes", pdfBytes);
            }
            else
            {
                Console.WriteLine("Error retrieving PDF. Status: " + response.StatusCode);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error retrieving Report: {ex.Message}");
        }
    }
}